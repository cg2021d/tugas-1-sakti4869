function main() {
    const canvas = document.getElementById('myCanvas');
    const gl = canvas.getContext('webgl');

    const vertices = [
        0.556075, -0.4625, 0.1, 0.1, 0.1, // Gambar 1 luar
        0.640187, -0.4625, 0.1, 0.1, 0.1,
        0.462617, -0.4875, 0.1, 0.1, 0.1,
        0.724299, -0.4875, 0.1, 0.1, 0.1,
        0.401869, -0.5125, 0.1, 0.1, 0.1,
        0.785047, -0.5125, 0.1, 0.1, 0.1,
        0.359813, -0.5375, 0.1, 0.1, 0.1,
        0.808411, -0.5375, 0.1, 0.1, 0.1,
        0.317757, -0.5625, 0.1, 0.1, 0.1,
        0.813084, -0.5625, 0.1, 0.1, 0.1,
        0.280374, -0.5875, 0.1, 0.1, 0.1,
        0.813084, -0.5875, 0.1, 0.1, 0.1,
        0.247664, -0.6125, 0.1, 0.1, 0.1,
        0.794393, -0.6125, 0.1, 0.1, 0.1,
        0.214953, -0.6375, 0.1, 0.1, 0.1,
        0.785047, -0.6375, 0.1, 0.1, 0.1,
        0.191589, -0.6625, 0.1, 0.1, 0.1,
        0.780374, -0.6625, 0.1, 0.1, 0.1,
        0.191589, -0.6875, 0.1, 0.1, 0.1,
        0.775701, -0.6875, 0.1, 0.1, 0.1,
        0.191589, -0.7125, 0.1, 0.1, 0.1,
        0.766355, -0.7125, 0.1, 0.1, 0.1,
        0.200935, -0.7375, 0.1, 0.1, 0.1,
        0.757009, -0.7375, 0.1, 0.1, 0.1,
        0.214953, -0.7625, 0.1, 0.1, 0.1,
        0.738318, -0.7625, 0.1, 0.1, 0.1,
        0.242991, -0.7875, 0.1, 0.1, 0.1,
        0.71028, -0.7875, 0.1, 0.1, 0.1,
        0.294393, -0.8125, 0.1, 0.1, 0.1,
        0.668224, -0.8125, 0.1, 0.1, 0.1,
        0.411215, -0.8375, 0.1, 0.1, 0.1,
        0.588785, -0.8375, 0.1, 0.1, 0.1,


        0.485981, -0.5375, 1.0, 1.0, 1.0, // Gambar 1 dalam
        0.705607, -0.5375, 1.0, 1.0, 1.0,
        0.425234, -0.5625, 1.0, 1.0, 1.0,
        0.733645, -0.5625, 1.0, 1.0, 1.0,
        0.378505, -0.5875, 1.0, 1.0, 1.0,
        0.752336, -0.5875, 1.0, 1.0, 1.0,
        0.336449, -0.6125, 1.0, 1.0, 1.0,
        0.757009, -0.6125, 1.0, 1.0, 1.0,
        0.294393, -0.6375, 1.0, 1.0, 1.0,
        0.757009, -0.6375, 1.0, 1.0, 1.0,
        0.261682, -0.6625, 1.0, 1.0, 1.0,
        0.752336, -0.6625, 1.0, 1.0, 1.0,
        0.228972, -0.6875, 1.0, 1.0, 1.0,
        0.733645, -0.6875, 1.0, 1.0, 1.0,
        0.247664, -0.7125, 1.0, 1.0, 1.0,
        0.700935, -0.7125, 1.0, 1.0, 1.0,
        0.341121, -0.7375, 1.0, 1.0, 1.0,
        0.635514, -0.7375, 1.0, 1.0, 1.0,

        -0.331776, -0.35625, 0.1, 0.1, 0.1, // Gambar 2 luar
        -0.401869, -0.35625, 0.1, 0.1, 0.1,
        -0.266355, -0.38125, 0.1, 0.1, 0.1,
        -0.471963, -0.38125, 0.1, 0.1, 0.1,
        -0.233645, -0.40625, 0.1, 0.1, 0.1,
        -0.509346, -0.40625, 0.1, 0.1, 0.1,
        -0.205607, -0.43125, 0.1, 0.1, 0.1,
        -0.537383, -0.43125, 0.1, 0.1, 0.1,
        -0.191589, -0.45625, 0.1, 0.1, 0.1,
        -0.556075, -0.45625, 0.1, 0.1, 0.1,
        -0.186916, -0.48125, 0.1, 0.1, 0.1,
        -0.570093, -0.48125, 0.1, 0.1, 0.1,
        -0.186916, -0.50625, 0.1, 0.1, 0.1,
        -0.579439, -0.50625, 0.1, 0.1, 0.1,
        -0.186916, -0.53125, 0.1, 0.1, 0.1,
        -0.584112, -0.53125, 0.1, 0.1, 0.1,
        -0.191589, -0.55625, 0.1, 0.1, 0.1,
        -0.584112, -0.55625, 0.1, 0.1, 0.1,
        -0.196262, -0.58125, 0.1, 0.1, 0.1,
        -0.584112, -0.58125, 0.1, 0.1, 0.1,
        -0.200935, -0.60625, 0.1, 0.1, 0.1,
        -0.584112, -0.60625, 0.1, 0.1, 0.1,
        -0.21028, -0.63125, 0.1, 0.1, 0.1,
        -0.574766, -0.63125, 0.1, 0.1, 0.1,
        -0.224299, -0.65625, 0.1, 0.1, 0.1,
        -0.565421, -0.65625, 0.1, 0.1, 0.1,
        -0.233645, -0.68125, 0.1, 0.1, 0.1,
        -0.551402, -0.68125, 0.1, 0.1, 0.1,
        -0.247664, -0.70625, 0.1, 0.1, 0.1,
        -0.537383, -0.70625, 0.1, 0.1, 0.1,
        -0.261682, -0.73125, 0.1, 0.1, 0.1,
        -0.523364, -0.73125, 0.1, 0.1, 0.1,
        -0.280374, -0.75625, 0.1, 0.1, 0.1,
        -0.5, -0.75625, 0.1, 0.1, 0.1,
        -0.303738, -0.78125, 0.1, 0.1, 0.1,
        -0.481308, -0.78125, 0.1, 0.1, 0.1,
        -0.331776, -0.80625, 0.1, 0.1, 0.1,
        -0.448598, -0.80625, 0.1, 0.1, 0.1,
        -0.373832, -0.83125, 0.1, 0.1, 0.1,
        -0.397196, -0.83125, 0.1, 0.1, 0.1,

        -0.341121, -0.40625, 1.0, 1.0, 1.0, // Gambar 2 dalam
        -0.397196, -0.40625, 1.0, 1.0, 1.0,
        -0.280374, -0.43125, 1.0, 1.0, 1.0,
        -0.46729, -0.43125, 1.0, 1.0, 1.0,
        -0.242991, -0.45625, 1.0, 1.0, 1.0,
        -0.504673, -0.45625, 1.0, 1.0, 1.0,
        -0.219626, -0.48125, 1.0, 1.0, 1.0,
        -0.53271, -0.48125, 1.0, 1.0, 1.0,
        -0.205607, -0.50625, 1.0, 1.0, 1.0,
        -0.551402, -0.50625, 1.0, 1.0, 1.0,
        -0.205607, -0.53125, 1.0, 1.0, 1.0,
        -0.565421, -0.53125, 1.0, 1.0, 1.0,
        -0.21028, -0.55625, 1.0, 1.0, 1.0,
        -0.565421, -0.55625, 1.0, 1.0, 1.0,
        -0.219626, -0.58125, 1.0, 1.0, 1.0,
        -0.556075, -0.58125, 1.0, 1.0, 1.0,
        -0.228972, -0.60625, 1.0, 1.0, 1.0,
        -0.542056, -0.60625, 1.0, 1.0, 1.0,
        -0.242991, -0.63125, 1.0, 1.0, 1.0,
        -0.528037, -0.63125, 1.0, 1.0, 1.0,
        -0.257009, -0.65625, 1.0, 1.0, 1.0,
        -0.509346, -0.65625, 1.0, 1.0, 1.0,
        -0.271028, -0.68125, 1.0, 1.0, 1.0,
        -0.485981, -0.68125, 1.0, 1.0, 1.0,
        -0.28972, -0.70625, 1.0, 1.0, 1.0,
        -0.457944, -0.70625, 1.0, 1.0, 1.0,
        -0.317757, -0.73125, 1.0, 1.0, 1.0,
        -0.429907, -0.73125, 1.0, 1.0, 1.0
    ];

    const buffer = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);
    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);

    var vertexShaderSource = `
        attribute vec2 aPosition;
        attribute vec3 aColor;

        varying vec3 vColor;

        uniform float uChange;

        mat4 translation = mat4(
            1.0, 0.0, 0.0, 0.0,
            0.0, 1.0, 0.0, 0.0,
            0.0, 0.0, 1.0, 0.0,
            0.0, uChange, 0.0, 1.0
        );

        void main() {
            gl_Position = translation * vec4(aPosition, 0.0, 1.0);
            vColor = aColor;
        }
    `;

    const fragmentShaderSource = `
        precision mediump float;
        varying vec3 vColor;

        void main() {
            gl_FragColor = vec4(vColor, 1.0);
        }
    `;

    const vertexShader = gl.createShader(gl.VERTEX_SHADER);
    gl.shaderSource(vertexShader, vertexShaderSource);

    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);
    gl.shaderSource(fragmentShader, fragmentShaderSource);

    gl.compileShader(vertexShader);
    gl.compileShader(fragmentShader);

    const shaderProgram = gl.createProgram();

    gl.attachShader(shaderProgram, vertexShader);
    gl.attachShader(shaderProgram, fragmentShader);

    gl.linkProgram(shaderProgram);
    gl.useProgram(shaderProgram);

    const aPosition = gl.getAttribLocation(shaderProgram, "aPosition");
    gl.vertexAttribPointer(aPosition, 2, gl.FLOAT, false, 5 * Float32Array.BYTES_PER_ELEMENT, 0);
    gl.enableVertexAttribArray(aPosition);

    const aColor = gl.getAttribLocation(shaderProgram, "aColor");
    gl.vertexAttribPointer(aColor, 3, gl.FLOAT, false, 5 * Float32Array.BYTES_PER_ELEMENT, 2 * Float32Array.BYTES_PER_ELEMENT);
    gl.enableVertexAttribArray(aColor);

    let speed = 0.0190;
    let change = 0;
    const uChange = gl.getUniformLocation(shaderProgram, "uChange");

    function render() {
        if (change >= 1.5 || change <= -0.2) speed *= -1.0;
        change += speed;
        gl.uniform1f(uChange, change);

        gl.clearColor(1.0, 1.0, 1.0, 1.0);
        gl.clear(gl.COLOR_BUFFER_BIT);

        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 31);
        gl.drawArrays(gl.TRIANGLE_STRIP, 32, 18);

        gl.uniform1f(uChange, 0.0);

        gl.drawArrays(gl.TRIANGLE_STRIP, 50, 40);
        gl.drawArrays(gl.TRIANGLE_STRIP, 90, 28);
    }

    setInterval(render, 1000 / 60);
}